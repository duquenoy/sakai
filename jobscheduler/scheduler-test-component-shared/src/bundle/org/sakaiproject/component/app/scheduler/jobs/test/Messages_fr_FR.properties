#TestConfigurableJob properties
integer.property=Tester la propri\u00e9t\u00e9 enti\u00e8re
integer.property.description=N\u2019importe quelle valeur enti\u00e8re valide sera accept\u00e9e et aussi -1 
string.property=Tester la propri\u00e9t\u00e9 la cha\u00eene
string.property.description=N\u2019importe quelle cha\u00eene, sauf mauvais (bad) sera accept\u00e9e
boolean.property=Tester la propri\u00e9t\u00e9 bool\u00e9enne
boolean.property.description=Les valeurs valides sont \: vrai (true), faux (false), oui (yes), or non (no)
integer.value.negativeone=La valeur -1 n\u2019est pas autoris\u00e9e
integer.value.format=La valeur envoy\u00e9e n\u2019est pas un entier
string.value.invalid=La valeur \u2019mauvaise (bad)\u2019 n\u2019est pas valide
boolean.value.invalid=La valeur bool\u00e9enne n\u2019est pas l\u2019une des \: vrai (true), faux (false), oui (yes), or non (no)

#TestEventGeneratorJob properties
minInterval.property=Intervalle en minutes
minInterval.property.description=Nombre de minutes \u00e0 incr\u00e9menter entre les \u00e9v\u00e9nements
numEvents.property=Nombre d\u2019\u00e9v\u00e9nements
numEvents.property.description=Nombre total d\u2019\u00e9v\u00e9nements \u00e0 g\u00e9n\u00e9rer
startDate.property=Date de d\u00e9but
startDate.property.description=Date \u00e0 utiliser pour le premier \u00e9v\u00e9nement g\u00e9n\u00e9r\u00e9
error.minInterval.format=l\u2019intervalle en minutes doit \u00eatre un entier sup\u00e9rieur \u00e0 1
error.numEvents.format=le nombre d\u2019\u00e9v\u00e9nements doit \u00eatre un entier sup\u00e9rieur \u00e0 1
error.startDate.format=la date de d\u00e9but doit \u00eatre de la forme \u2019aaaa-MM-jj\u2019 (par exemple\: 2010-11-01)