# this defines the entity description for user
user = Repr\u00e9sente un utilisateur dans le syst\u00e8me, les donn\u00e9es utilisateur sont effectivement immuables et la suppression des utilisateurs ne peut pas remplacer les utilisateurs externes fournis
user.view.list = Renvoie une liste de tous les utilisateurs du syst\u00e8me (peut \u00eatre limit\u00e9e par la recherche mais toujours max de 50 r\u00e9sultats), normalement cela ne fonctionne que pour les utilisateurs administrateurs, mais peut \u00eatre activ\u00e9 pour tous les utilisateurs avec le param\u00e8tre de configuration \u2019entity.users.viewall\=true\u2019
user.view.show = Obtenir un seul utilisateur par eid (par d\u00e9faut) ou par id en pr\u00e9fixant avec id\= (par exemple /user/id\=ERW434YIY88)
user.view.new = Cr\u00e9e un utilisateur, eid est le seul champ obligatoire, tous les autres sont optionnels, l\u2019id peut \u00e9galement \u00eatre sp\u00e9cifi\u00e9, mais un sera g\u00e9n\u00e9r\u00e9 pour vous si vous ne le laissez pas
user.Resolvable = L\u2019identifiant de l\u2019utilisateur par d\u00e9faut est l\u2019eid (par exemple /user/aaronz), les lookups peuvent \u00e9galement se produire en utilisant l\u2019id en le pr\u00e9fixant avec id\= (par exemple /user/id\=ERW434YIY88)
user.action.current = Obtenir de l\u2019utilisateur courant s\u2019il y a un
user.action.exists = V\u00e9rifier si un identifiant d\u2019utilisateur existe (v\u00e9rifie par eid puis id sauf si \u2019id\=userId\u2019 est utilis\u00e9), retourne 200 si existe et un code d\u2019\u00e9chec comme 400 si ce n\u2019est pas le cas
user.action.validatePassword = V\u00e9rifier si un mot de passe est valide pour un utilisateur, param\u00e8tres\: \u2019password\u2019 (obligatoire) le mot de passe pour v\u00e9rifier, \u2019username\u2019 (facultatif) le nom d\u2019utilisateur de l\u2019utilisateur
