# Contains the i18n strings for the entity description pages
# the batch describe page
batch = Le lot est un gestionnaire sp\u00e9cial qui fournit un traitement en lot pour plusieurs requ\u00eates d\u2019entit\u00e9 \u00e0 la fois
batch.description = Batch utilise le param\u00e8tre _refs pour d\u00e9finir les r\u00e9f\u00e9rences des urls/entit\u00e9s g\u00e9r\u00e9es (par exemple, /direct/batch.json?_refs\=/direct/entit\u00e91/123,/direct/entit\u00e92/456). <br/>Le format par d\u00e9faut renvoy\u00e9 pour les demandes par lot est json, pour demander d\u2019autres formats il suffit d\u2019inclure l\u2019extension apr\u00e8s le lot comme indiqu\u00e9. Le lot ne peut pas fonctionner sans le param\u00e8tre refs, donc l\u2019exclure provoque un \u00e9chec. <br/>Le handler n\u00e9cessite des chemins complets vers refs mais ins\u00e9rera le chemin de la servlet EB si la ref ne commence pas par /. Les refs externes peuvent \u00eatre incluses en utilisant l\u2019URL compl\u00e8te (http\://...). <br/>L\u2019\u00e9tat du lot sera renvoy\u00e9 \u00e0 200 en cas de succ\u00e8s total ou partiel. Un \u00e9chec total ou une erreur de serveur donne un 501. <br/> Les en-t\u00eates suivants seront renvoy\u00e9s pour une requ\u00eate qui n\u2019entra\u00eene pas d\u2019\u00e9chec du serveur \: <br/> - batchRefs (toutes les refs que nous avons trait\u00e9es dans ce lot - par exemple /direct/prefix/id) <br/>- batchStatus (l\u2019\u00e9tat de chaque demande de ref - par exemple 200) <br/>- batchKeys (les cl\u00e9s utilis\u00e9es pour repr\u00e9senter chaque ref - par exemple ref0) <br/>- batchURLs (les URL auxquelles les demandes ont \u00e9t\u00e9 envoy\u00e9es - e. g. /direct/prefix/id.json) <br/>- batchMapping (le mappage de la cl\u00e9 ref \u00e0 ref - par exemple ref0\=/direct/entity1/123) <br/>- batchErrors (comprend toutes les cl\u00e9s ref pour les refs qui ont \u00e9chou\u00e9 - par exemple ref1) <br/>Supporte les m\u00e9thodes Http GET, POST, PUT et DELETE.
batch.output = Les donn\u00e9es seront renvoy\u00e9es dans le format demand\u00e9 pour les demandes (par exemple json), les donn\u00e9es de r\u00e9ponse pour chaque ref se trouvant sous une structure ref\# (par exemple ref0 \= /direct/entit\u00e91/123, ref1 \= /direct/entit\u00e92/456). Les en-t\u00eates, status, ref, entityURL et donn\u00e9es (ou contenu brut) seront retourn\u00e9s pour chaque ref. Si les donn\u00e9es de la r\u00e9f peuvent \u00eatre comprises comme le format demand\u00e9, elles seront int\u00e9gr\u00e9es dans la r\u00e9ponse, sinon, elles seront incluses en tant que contenu brut.
batch.input = La saisie est sp\u00e9cialement trait\u00e9e pour les demandes par lots. La saisie doit se faire sous la forme de param\u00e8tres http (dans l\u2019en-t\u00eate) avec la cl\u00e9 de lot pr\u00e9fix\u00e9e pour chaque param\u00e8tre qui est unique pour la demande de lot concern\u00e9e et tout param\u00e8tre partag\u00e9 laiss\u00e9 sans pr\u00e9fixe. <br/> Par exemple, nous voulons cr\u00e9er par lot 2 options de sondage et elles partagent le m\u00eame pollId. Les param\u00e8tres envoy\u00e9s pourraient le souhaiter \: (pollId\=111, ref0.text\= Glaces et chatons, ref1.text\= Je d\u00e9teste les belles choses) Le pollId sera appliqu\u00e9 aux deux options de sondage cr\u00e9\u00e9es. <br/>L\u2019envoi de donn\u00e9es encod\u00e9es dans le corps de la requ\u00eate n\u2019est pas pris en charge actuellement.